var app=angular.module("TabachkovResume",[]);app.controller("MainController",["$scope","resume",function(e,t){t.then(function(t){e.dataFromJson=t,e.questions=t.values})}]),app.controller("CheckData",["$scope",function(e){function t(){$("form input[type='radio']").removeAttr("checked"),$("form input[type='checkbox']").removeAttr("checked"),$("form input[type='text']").val(""),$("form textarea").val("")}e.checkData=function(){var n,a=[],r=[],s=!0,u=[],i=!0,o=[],c=!0,l=[],p=!0,f=[],h=!0,v=[];for(n in e.questions){if(a[n]=e.questions[n],"0"==a[n].answers_type){r[n]=$("input[name='"+a[n].subtitle+"']:checked").length;var m=new Object;m.subtitle=a[n].subtitle,m.reference=n;var b=[];$("input[name='"+a[n].subtitle+"']:checked").each(function(){b.push(this.value)}),m.value=b,v.push(m)}if("1"==a[n].answers_type){u[n]=$("input[name='"+a[n].subtitle+"']:checked").length;var m=new Object;m.subtitle=a[n].subtitle,m.reference=n;var d;$("input[name='"+a[n].subtitle+"']:checked").each(function(){d=this.value}),m.value=d,v.push(m)}if("2"==a[n].answers_type){var m=new Object;m.subtitle=a[n].subtitle,m.reference=n,m.value=$("select[name='"+a[n].subtitle+"']").val(),v.push(m)}if("3"==a[n].answers_type){o[n]=$("textarea[name='"+a[n].subtitle+"']").val();var m=new Object;m.subtitle=a[n].subtitle,m.reference=n,m.value=o[n],v.push(m)}if("4"==a[n].answers_type){l[n]=$("input[name='"+a[n].subtitle+"']").val();var m=new Object;m.subtitle=a[n].subtitle,m.reference=n,m.value=l[n],v.push(m)}"0"==a[n].comment&&(f[n]=$("input[class='comment']").val())}for(n in r)0==r[n]&&(s=!1);for(n in u)0==u[n]&&(i=!1);for(n in o)""==o[n]&&(c=!1);for(n in l)""==l[n]&&(p=!1);for(n in f)""==f[n]&&(h=!1);$().toastmessage({sticky:!0,position:"middle-center"}),s&&i&&c&&p&&h?(console.log(v),t(),$("form").garlic("destroy"),$().toastmessage("showSuccessToast","Спасибо за Ваше мнение!")):$().toastmessage("showWarningToast","Пожалуйста, заполните все поля анкеты.")}}]),app.factory("resume",["$http",function(e){return e.get(document.location.href+"/data/feedbacks.json").then(function(e){var t=e.data;return t})}]),app.filter("orderObjectBy",function(){return function(e,t){if(!angular.isObject(e))return e;var n=[];for(var a in e)n.push(e[a]);return n.sort(function(e,n){return e=parseInt(e[t]),n=parseInt(n[t]),e-n}),n}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
